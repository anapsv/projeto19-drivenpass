generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model users {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  email       String        @unique
  password    String
  cards       cards[]
  credentials credentials[]
  notes       notes[]
  wifis       wifis[]
}

model credentials {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  url       String
  username  String
  password  String
  title     String
  userId    Int
  user      users    @relation(fields: [userId], references: [id])

  @@unique([title, userId])
}

model notes {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  title       String
  description String
  userId      Int
  user        users    @relation(fields: [userId], references: [id])

  @@unique([title, userId])
}

model cards {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  title          String
  number         String
  cardholderName String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           cardType
  userId         Int
  user           users    @relation(fields: [userId], references: [id])

  @@unique([title, userId])
}

enum cardType {
  credit
  debit
  both
}

model wifis {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  title       String
  networkName String
  password    String
  user        users    @relation(fields: [userId], references: [id])
  userId      Int

  @@unique([title, userId])
}
